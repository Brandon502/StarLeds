<!DOCTYPE html>
<html>
<head>
    <title>Playground</title>
    <script>
      let ws;
      function gId(c) {return document.getElementById(c);}

      function onLoad() {
        let url = (window.location.protocol == "https:"?"wss":"ws")+'://'+window.location.hostname+'/ws';
        console.log("onLoad url", url);
        ws = new WebSocket(url);
        ws.binaryType = "arraybuffer";
    	  ws.onmessage = (e)=>{
          let json = JSON.parse(e.data);
          if (json[0] && json[0].incldef) { //generate array of objects
            console.log("WS receive generateHTML", json);
            generateHTML(json);
          }
          else { //update
            // console.log("WS receive update", json);
            processUpdate(json);
          }
        }
        ws.onclose = (e)=>{
          console.log("WS close", e);
        }
        ws.onopen = (e)=>{
          console.log("WS open", e);
        }
      }

      function requestJson(command) {
        let url = `http://${window.location.hostname}/json`;
        let req = JSON.stringify(command);

        console.log("requestJson", url, command);

        ws.send(req?req:'{"v":true}');
        return;

        //not used at the moment as WebSockets only
        fetch(url, {
          method: 'post',
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          },
          body: req
        })
        .then(res => {
          if (res) console.log("requestJson res", res, res.json());
        })
        .then(json => {
          if (json) console.log("requestJson json", json);
        })
        .catch((e)=>{
          console.log("requestJson catch", e);
        });
      }

      function setInput(element) {
        var command = {};
        command[element.id] = element.value;
        // console.log("setInput", command);

        requestJson(command);
      }
      function setCheckbox(element) {
        var command = {};
        command[element.id] = element.checked;
        // console.log("setCheckbox", command);

        requestJson(command);
      }
      function setButton(element) {
        var command = {};
        command[element.id] = "push";
        // console.log("setCheckbox", command);

        requestJson(command);
      }

      function setDropdown(element) {
        var command = {};
        command[element.id] = element.value;
        // console.log("setInput", command);

        requestJson(command);
      }

      function generateHTML(json) {
        // console.log("generateHTML", json);
        if (json.length) for (var element of json) //objects of array
          generateHTML(element);

        if (json.type == "input") {
          gId('in').innerHTML += `<p><label>${json.prompt}</label> <input id="${json.prompt}" onfocusout="setInput(this)" value="${json.value}"></p>`;
        }
        if (json.type == "password") {
          gId('in').innerHTML += `<p><label>${json.prompt}</label> <input id="${json.prompt}" type="password" onfocusout="setInput(this)" value="${json.value}"></p>`;
        }
        if (json.type == "number") {
          gId('in').innerHTML += `<p><label>${json.prompt}</label> <input id="${json.prompt}" onfocusout="setInput(this)" value="${json.value}"></p>`;
        }
        else if (json.type == "display") {
          gId('in').innerHTML += `<p><label>${json.prompt}</label> <span id="${json.prompt}">${json.value}</span></p>`;
        }
        else if (json.type == "checkbox") {
          gId('in').innerHTML += `<p><label>${json.prompt}</label> <input id="${json.prompt}" type="checkbox" onchange="setCheckbox(this)" ${json.value?"checked":""}></p>`;
        }
        else if (json.type == "button") {
          gId('in').innerHTML += `<p><button id="${json.prompt}" type="button" onclick="setButton(this)">${json.prompt}</button></p>`;
        }
        else if (json.type == "group") {
          gId('in').innerHTML += `<h2 id="${json.prompt}">${json.prompt}</h2>`;
        }
        else if (json.type == "dropdown") {
          gId('in').innerHTML += `<p><label>${json.prompt}</label> <select id="${json.prompt}" onchange="setDropdown(this)"></select></p>`;
          //(default) value will be set in processUpdate
        }

        if (json.uiFun >= 0) { //>=0 as element in object
          var command = {};
          command["uiFun"] = json.prompt; //ask for uiFun (to add the options)
          requestJson(command);
        }

        if (json.n) //details (e.g. group)
          generateHTML(json.n);

      }

      function processUpdate(json) {
        // console.log("processUpdate", json);
        for (var key of Object.keys(json)) {
          // console.log("processUpdate", key, json[key]);
          if (key != "uiFun") { //was the request
            // let id = gId(key);
            if (json[key].label) {
              console.log("processUpdate label", key, json[key].label);
              // gId(json.uiFun).insertAdjacentHTML("beforebegin", `<label>${json.label}</label> `);
              gId(key).parentNode.firstChild.innerHTML = json[key].label; //the <label>
            }
            if (json[key].comment) {
              console.log("processUpdate comment", key, json[key].comment);
              gId(key).insertAdjacentHTML("afterend", ` <i>${json[key].comment}</i>`);
            }
            if (json[key].lov) {
              console.log("processUpdate lov", key, json[key].lov);
              var index = 0;
              for (var x of json[key].lov) {
                let opt = document.createElement("option");
                opt.value = index;
                opt.text = x;
                gId(key).appendChild(opt);
                index++;
              }
            }
            if (json[key].value) { //after lov, in case used
              console.log("processUpdate value", key, json[key].value, gId(key));
              // if (gId(key).textContent && !json[key].lov) //display (select element has also textContent)
              if (gId(key).nodeName.toLocaleLowerCase() == "span") //display
                gId(key).textContent = json[key].value;
              else if (gId(key).type == "checkbox") //checkbox
                gId(key).checked = json[key].value;
              else //inputs
                gId(key).value = json[key].value;
            }
          }
        }
      }
      </script>
</head>
<body onload="onLoad()">
    <h1>Playground</h1>
    <div id="in"></div>
</body>
</html>